{"version":3,"mappings":"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","names":["_sfc_main","type","presetMessages","messages","message","container","randomType","_hoisted_1","_hoisted_2","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_openBlock","_createElementBlock","_createElementVNode","_cache","_normalizeClass","$data","_hoisted_3","_Fragment","_renderList","index","_toDisplayString","$options","videoElement","ref","isCameraOn","currentCamera","hasMultipleCameras","currentTime","stream","timeInterval","updateTime","now","startCamera","videoDevices","device","_a","error","stopCamera","track","toggleCamera","switchCamera","onMounted","onUnmounted","isVisible","isThinking","userInput","messagesContainer","welcomeMessage","tutorials","handleOption","option","messageId","response","resolve","scrollToBottom","sendMessage","toggleAssistant","watch","router","createRouter","createWebHistory","HomeView","CommunicationsView","app","createApp","App","createPinia"],"ignoreList":[],"sources":["../../index.html?html-proxy&index=0.js","../../src/components/CommunicationConsole.vue","../../src/components/VideoDisplay.vue","../../src/components/AIAssistant.vue","../../src/router/index.js","../../src/main.js"],"sourcesContent":["\n      window.__BASE_URL__ = '/space-nexus-defense-comm/';\n    ","<template>\n  <div class=\"communication-console\">\n    <div class=\"console-header\">\n      <div class=\"console-title\">STARFLEET COMMUNICATIONS TERMINAL</div>\n      <div class=\"status-indicator\" :class=\"{ active: isActive }\"></div>\n    </div>\n    \n    <div class=\"messages-container\" ref=\"messagesContainer\">\n      <div v-for=\"(message, index) in messages\" \n           :key=\"index\" \n           class=\"message\"\n           :class=\"message.type.toLowerCase()\">\n        <span class=\"timestamp\">{{ message.timestamp }}</span>\n        <span class=\"type\">{{ message.type }}:</span>\n        <span class=\"content\">{{ message.content }}</span>\n      </div>\n    </div>\n\n    <div class=\"console-controls\">\n      <button @click=\"generateMessage('ALERT')\" class=\"control-btn alert\">ALERT</button>\n      <button @click=\"generateMessage('WARNING')\" class=\"control-btn warning\">WARNING</button>\n      <button @click=\"generateMessage('STATUS')\" class=\"control-btn status\">STATUS</button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'CommunicationConsole',\n  data() {\n    return {\n      isActive: true,\n      messages: [],\n      messageTypes: ['ALERT', 'WARNING', 'STATUS', 'UPDATE', 'NOTICE']\n    }\n  },\n  mounted() {\n    // Generate initial messages\n    this.generateMessage('STATUS')\n    this.startRandomMessages()\n  },\n  methods: {\n    generateMessage(type) {\n      const presetMessages = {\n        ALERT: [\n          'Incoming transmission from Starbase Alpha',\n          'Unidentified vessel approaching from vector 359',\n          'Hostile entities detected in lower decks'\n        ],\n        WARNING: [\n          'Shield capacity at 65%',\n          'Minor fluctuations in warp core',\n          'Environmental systems need maintenance'\n        ],\n        STATUS: [\n          'All systems nominal',\n          'Routine maintenance completed',\n          'Ship status: Green'\n        ]\n      }\n\n      const messages = presetMessages[type] || presetMessages.STATUS\n      const message = {\n        type,\n        content: messages[Math.floor(Math.random() * messages.length)],\n        timestamp: new Date().toLocaleTimeString()\n      }\n\n      this.messages.push(message)\n      this.$nextTick(() => {\n        const container = this.$refs.messagesContainer\n        container.scrollTop = container.scrollHeight\n      })\n    },\n    startRandomMessages() {\n      setInterval(() => {\n        const randomType = this.messageTypes[Math.floor(Math.random() * this.messageTypes.length)]\n        this.generateMessage(randomType)\n      }, 5000)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.communication-console {\n  background-color: #0a0a0a;\n  border: 2px solid #33ff33;\n  border-radius: 8px;\n  padding: 20px;\n  height: 500px;\n  display: flex;\n  flex-direction: column;\n  font-family: 'Courier New', monospace;\n  color: #33ff33;\n  box-shadow: 0 0 20px rgba(51, 255, 51, 0.2);\n}\n\n.console-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n  padding-bottom: 10px;\n  border-bottom: 1px solid #33ff33;\n}\n\n.console-title {\n  font-size: 1.2em;\n  font-weight: bold;\n}\n\n.status-indicator {\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background-color: #333;\n}\n\n.status-indicator.active {\n  background-color: #33ff33;\n  box-shadow: 0 0 10px #33ff33;\n  animation: pulse 2s infinite;\n}\n\n.messages-container {\n  flex-grow: 1;\n  overflow-y: auto;\n  margin-bottom: 20px;\n  padding-right: 10px;\n}\n\n.message {\n  margin-bottom: 10px;\n  padding: 8px;\n  border-radius: 4px;\n  background-color: rgba(51, 255, 51, 0.1);\n}\n\n.message.alert {\n  background-color: rgba(255, 0, 0, 0.2);\n  border-left: 3px solid #ff0000;\n}\n\n.message.warning {\n  background-color: rgba(255, 165, 0, 0.2);\n  border-left: 3px solid #ffa500;\n}\n\n.message.status {\n  border-left: 3px solid #33ff33;\n}\n\n.timestamp {\n  font-size: 0.8em;\n  opacity: 0.7;\n  margin-right: 10px;\n}\n\n.type {\n  font-weight: bold;\n  margin-right: 10px;\n}\n\n.console-controls {\n  display: flex;\n  gap: 10px;\n}\n\n.control-btn {\n  background-color: transparent;\n  border: 1px solid #33ff33;\n  color: #33ff33;\n  padding: 8px 16px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  font-family: 'Courier New', monospace;\n}\n\n.control-btn:hover {\n  background-color: rgba(51, 255, 51, 0.2);\n}\n\n.control-btn.alert {\n  border-color: #ff0000;\n  color: #ff0000;\n}\n\n.control-btn.alert:hover {\n  background-color: rgba(255, 0, 0, 0.2);\n}\n\n.control-btn.warning {\n  border-color: #ffa500;\n  color: #ffa500;\n}\n\n.control-btn.warning:hover {\n  background-color: rgba(255, 165, 0, 0.2);\n}\n\n@keyframes pulse {\n  0% {\n    box-shadow: 0 0 0 0 rgba(51, 255, 51, 0.4);\n  }\n  70% {\n    box-shadow: 0 0 0 10px rgba(51, 255, 51, 0);\n  }\n  100% {\n    box-shadow: 0 0 0 0 rgba(51, 255, 51, 0);\n  }\n}\n\n::-webkit-scrollbar {\n  width: 8px;\n}\n\n::-webkit-scrollbar-track {\n  background: #0a0a0a;\n}\n\n::-webkit-scrollbar-thumb {\n  background: #30af30;\n  border-radius: 4px;\n}\n</style>\n","<template>\n  <div class=\"video-display\">\n    <div class=\"display-header\">\n      <div class=\"display-title\"></div>\n      <div class=\"camera-controls\">\n        <button @click=\"toggleCamera\" :class=\"{ active: isCameraOn }\">\n          {{ isCameraOn ? 'DISABLE FEED' : 'ENABLE FEED' }}\n        </button>\n        <button @click=\"switchCamera\" :disabled=\"!hasMultipleCameras\">\n          SWITCH CAMERA\n        </button>\n      </div>\n    </div>\n    <div class=\"video-container\" :class=\"{ active: isCameraOn }\">\n      <video ref=\"videoElement\" autoplay playsinline></video>\n      <div v-if=\"!isCameraOn\" class=\"video-overlay\">\n        <div class=\"overlay-text\">FEED OFFLINE</div>\n      </div>\n      <div class=\"scan-line\"></div>\n      <div class=\"corner top-left\"></div>\n      <div class=\"corner top-right\"></div>\n      <div class=\"corner bottom-left\"></div>\n      <div class=\"corner bottom-right\"></div>\n    </div>\n    <div class=\"display-footer\">\n      <div class=\"camera-info\">\n        <span>CAM-{{ currentCamera + 1 }}</span>\n        <span>{{ isCameraOn ? 'ACTIVE' : 'STANDBY' }}</span>\n      </div>\n      <div class=\"timestamp\">{{ currentTime }}</div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, onUnmounted } from 'vue'\n\nconst videoElement = ref(null)\nconst isCameraOn = ref(false)\nconst currentCamera = ref(0)\nconst hasMultipleCameras = ref(false)\nconst currentTime = ref('')\nlet stream = null\nlet timeInterval\n\n// Update timestamp\nconst updateTime = () => {\n  const now = new Date()\n  currentTime.value = now.toLocaleTimeString('en-US', { \n    hour12: false,\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit'\n  })\n}\n\n// Start camera\nconst startCamera = async () => {\n  try {\n    const devices = await navigator.mediaDevices.enumerateDevices()\n    const videoDevices = devices.filter(device => device.kind === 'videoinput')\n    hasMultipleCameras.value = videoDevices.length > 1\n\n    stream = await navigator.mediaDevices.getUserMedia({\n      video: {\n        deviceId: videoDevices[currentCamera.value]?.deviceId,\n        width: { ideal: 1280 },\n        height: { ideal: 720 }\n      }\n    })\n    \n    if (videoElement.value) {\n      videoElement.value.srcObject = stream\n      isCameraOn.value = true\n    }\n  } catch (error) {\n    console.error('Error accessing camera:', error)\n  }\n}\n\n// Stop camera\nconst stopCamera = () => {\n  if (stream) {\n    stream.getTracks().forEach(track => track.stop())\n    stream = null\n  }\n  if (videoElement.value) {\n    videoElement.value.srcObject = null\n  }\n  isCameraOn.value = false\n}\n\n// Toggle camera\nconst toggleCamera = () => {\n  if (isCameraOn.value) {\n    stopCamera()\n  } else {\n    startCamera()\n  }\n}\n\n// Switch between available cameras\nconst switchCamera = async () => {\n  currentCamera.value = (currentCamera.value + 1) % 2\n  if (isCameraOn.value) {\n    stopCamera()\n    await startCamera()\n  }\n}\n\nonMounted(() => {\n  updateTime()\n  timeInterval = setInterval(updateTime, 1000)\n})\n\nonUnmounted(() => {\n  stopCamera()\n  clearInterval(timeInterval)\n})\n</script>\n\n<style scoped>\n.video-display {\n  background: var(--color-terminal-dark);\n  border: 2px solid var(--color-terminal-border);\n  border-radius: 8px;\n  padding: 20px;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.display-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 15px;\n}\n\n.display-title {\n  font-size: 1.2em;\n  font-weight: bold;\n  color: var(--color-terminal-green);\n}\n\n.camera-controls {\n  display: flex;\n  gap: 10px;\n}\n\n.camera-controls button {\n  background: transparent;\n  border: 1px solid var(--color-terminal-border);\n  color: var(--color-terminal-green);\n  padding: 8px 16px;\n  border-radius: 4px;\n  cursor: pointer;\n  font-family: var(--font-terminal);\n  transition: all 0.3s ease;\n  font-size: 0.9em;\n}\n\n.camera-controls button:hover:not(:disabled) {\n  background: rgba(48, 175, 48, 0.2);\n}\n\n.camera-controls button:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.camera-controls button.active {\n  border-color: var(--color-alert);\n  color: var(--color-alert);\n}\n\n.video-container {\n  position: relative;\n  width: 100%;\n  padding-top: 56.25%; /* 16:9 Aspect Ratio */\n  background: black;\n  border: 1px solid var(--color-terminal-border);\n  border-radius: 4px;\n  overflow: hidden;\n  margin: 15px 0;\n}\n\n.video-container video {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  object-fit: contain; /* Changed from cover to contain to show full face */\n}\n\n.video-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgba(0, 0, 0, 0.8);\n}\n\n.overlay-text {\n  color: var(--color-alert);\n  font-size: 1.5em;\n  font-weight: bold;\n}\n\n.scan-line {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 2px;\n  background: rgba(51, 255, 51, 0.3);\n  animation: scan 2s linear infinite;\n}\n\n@keyframes scan {\n  0% {\n    transform: translateY(0);\n  }\n  100% {\n    transform: translateY(100%);\n  }\n}\n\n.corner {\n  position: absolute;\n  width: 20px;\n  height: 20px;\n  border: 2px solid var(--color-terminal-green);\n}\n\n.top-left {\n  top: 10px;\n  left: 10px;\n  border-right: none;\n  border-bottom: none;\n}\n\n.top-right {\n  top: 10px;\n  right: 10px;\n  border-left: none;\n  border-bottom: none;\n}\n\n.bottom-left {\n  bottom: 10px;\n  left: 10px;\n  border-right: none;\n  border-top: none;\n}\n\n.bottom-right {\n  bottom: 10px;\n  right: 10px;\n  border-left: none;\n  border-top: none;\n}\n\n.display-footer {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 15px;\n  color: var(--color-terminal-green);\n  font-size: 0.9em;\n}\n\n.camera-info {\n  display: flex;\n  gap: 20px;\n}\n\n.timestamp {\n  font-family: monospace;\n}\n</style>\n","<template>\n  <div class=\"ai-assistant\" :class=\"{ 'is-active': isVisible }\">\n    <div class=\"assistant-container\">\n      <div class=\"assistant-header\">\n        <div class=\"ai-status\">\n          <div class=\"ai-indicator\" :class=\"{ 'active': isThinking }\"></div>\n          <span>AI ASSISTANT</span>\n        </div>\n        <button @click=\"toggleAssistant\" class=\"toggle-button\">\n          {{ isVisible ? 'MINIMIZE' : 'NEED HELP?' }}\n        </button>\n      </div>\n      \n      <div class=\"assistant-content\" v-if=\"isVisible\">\n        <div class=\"messages-container\" ref=\"messagesContainer\">\n          <div v-for=\"(message, index) in messages\" \n               :key=\"index\" \n               class=\"message\"\n               :class=\"message.type\">\n            <div class=\"message-content\">{{ message.content }}</div>\n            <div class=\"message-options\" v-if=\"message.options\">\n              <button v-for=\"option in message.options\"\n                      :key=\"option\"\n                      @click=\"handleOption(option, message.id)\"\n                      class=\"option-button\">\n                {{ option }}\n              </button>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"input-container\">\n          <input v-model=\"userInput\"\n                 @keyup.enter=\"sendMessage\"\n                 placeholder=\"Ask me anything...\"\n                 :disabled=\"isThinking\"\n                 class=\"user-input\" />\n          <button @click=\"sendMessage\" \n                  :disabled=\"isThinking\"\n                  class=\"send-button\">\n            SEND\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, watch } from 'vue'\n\nconst isVisible = ref(false)\nconst isThinking = ref(false)\nconst userInput = ref('')\nconst messages = ref([])\nconst messagesContainer = ref(null)\n\n// Welcome message structure\nconst welcomeMessage = {\n  id: 'welcome',\n  type: 'ai',\n  content: \"Welcome to Space Nexus! I'm your AI assistant. How can I help you today?\",\n  options: [\n    \"Show me around\",\n    \"How do I use the camera?\",\n    \"Tell me about messages\",\n    \"What are all these buttons?\"\n  ]\n}\n\n// Tutorial steps for different features\nconst tutorials = {\n  camera: [\n    \"The camera system lets you monitor different areas. Let me show you how to use it.\",\n    \"First, click 'ENABLE FEED' to start the camera.\",\n    \"If you have multiple cameras, you can switch between them.\",\n    \"Would you like to try it now?\"\n  ],\n  messages: [\n    \"The communication console shows different types of messages: ALERTS, WARNINGS, and STATUS updates.\",\n    \"You can generate different message types using the buttons below.\",\n    \"The system also generates messages automatically to keep you informed.\",\n    \"Want to try sending a message?\"\n  ]\n}\n\n// Handle user selecting an option\nconst handleOption = async (option, messageId) => {\n  isThinking.value = true\n  \n  let response = {\n    type: 'ai',\n    content: '',\n    options: []\n  }\n\n  switch (option) {\n    case \"Show me around\":\n      response.content = \"I'll give you a quick tour! What would you like to explore first?\"\n      response.options = [\"Camera System\", \"Message Console\", \"AI Features\"]\n      break\n    case \"How do I use the camera?\":\n      response.content = tutorials.camera[0]\n      response.options = [\"Next Step\", \"Try it myself\", \"Show all steps\"]\n      break\n    case \"Tell me about messages\":\n      response.content = tutorials.messages[0]\n      response.options = [\"Next Step\", \"Try sending a message\", \"Show all types\"]\n      break\n    default:\n      response.content = \"I can help you with that! Let me explain...\"\n      response.options = [\"Tell me more\", \"Try it out\", \"Show other features\"]\n  }\n\n  await new Promise(resolve => setTimeout(resolve, 1000))\n  messages.value.push(response)\n  isThinking.value = false\n  scrollToBottom()\n}\n\n// Send a message\nconst sendMessage = async () => {\n  if (!userInput.value.trim() || isThinking.value) return\n\n  // Add user message\n  messages.value.push({\n    type: 'user',\n    content: userInput.value\n  })\n\n  userInput.value = ''\n  isThinking.value = true\n\n  // Simulate AI thinking\n  await new Promise(resolve => setTimeout(resolve, 1500))\n\n  // Add AI response\n  messages.value.push({\n    type: 'ai',\n    content: \"I understand you're asking about \" + messages.value[messages.value.length - 1].content + \". Let me help you with that!\",\n    options: [\"Learn more\", \"Try it out\", \"Show me something else\"]\n  })\n\n  isThinking.value = false\n  scrollToBottom()\n}\n\n// Toggle assistant visibility\nconst toggleAssistant = () => {\n  isVisible.value = !isVisible.value\n  if (isVisible.value && messages.value.length === 0) {\n    messages.value.push(welcomeMessage)\n  }\n}\n\n// Scroll to bottom of messages\nconst scrollToBottom = () => {\n  setTimeout(() => {\n    if (messagesContainer.value) {\n      messagesContainer.value.scrollTop = messagesContainer.value.scrollHeight\n    }\n  }, 100)\n}\n\n// Watch for new messages and scroll\nwatch(messages, () => scrollToBottom(), { deep: true })\n\nonMounted(() => {\n  // Show welcome message after a short delay\n  setTimeout(() => {\n    isVisible.value = true\n    messages.value.push(welcomeMessage)\n  }, 1000)\n})\n</script>\n\n<style scoped>\n.ai-assistant {\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  width: 400px;\n  max-width: calc(100vw - 40px);\n  background: var(--color-terminal-dark);\n  border: 2px solid var(--color-terminal-border);\n  border-radius: 8px;\n  font-family: var(--font-terminal);\n  z-index: 1000;\n  opacity: 0.95;\n}\n\n.assistant-container {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n}\n\n.assistant-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px;\n  border-bottom: 1px solid var(--color-terminal-border);\n}\n\n.ai-status {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  color: var(--color-terminal-green);\n}\n\n.ai-indicator {\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  background: var(--color-terminal-green);\n  opacity: 0.5;\n}\n\n.ai-indicator.active {\n  opacity: 1;\n  animation: pulse 1.5s infinite;\n}\n\n@keyframes pulse {\n  0% { transform: scale(1); }\n  50% { transform: scale(1.2); }\n  100% { transform: scale(1); }\n}\n\n.toggle-button {\n  background: transparent;\n  border: 1px solid var(--color-terminal-green);\n  color: var(--color-terminal-green);\n  padding: 5px 10px;\n  border-radius: 4px;\n  cursor: pointer;\n  font-family: var(--font-terminal);\n  transition: all 0.3s ease;\n}\n\n.toggle-button:hover {\n  background: rgba(51, 255, 51, 0.1);\n}\n\n.assistant-content {\n  height: 400px;\n  display: flex;\n  flex-direction: column;\n}\n\n.messages-container {\n  flex: 1;\n  overflow-y: auto;\n  padding: 15px;\n}\n\n.message {\n  margin-bottom: 15px;\n  padding: 10px;\n  border-radius: 4px;\n  max-width: 85%;\n}\n\n.message.ai {\n  background: rgba(51, 255, 51, 0.1);\n  margin-right: auto;\n  border-left: 3px solid var(--color-terminal-green);\n}\n\n.message.user {\n  background: rgba(51, 255, 51, 0.05);\n  margin-left: auto;\n  border-right: 3px solid var(--color-terminal-green);\n}\n\n.message-content {\n  color: var(--color-terminal-green);\n  margin-bottom: 10px;\n}\n\n.message-options {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 5px;\n}\n\n.option-button {\n  background: transparent;\n  border: 1px solid var(--color-terminal-green);\n  color: var(--color-terminal-green);\n  padding: 5px 10px;\n  border-radius: 4px;\n  cursor: pointer;\n  font-family: var(--font-terminal);\n  font-size: 0.9em;\n  transition: all 0.3s ease;\n}\n\n.option-button:hover {\n  background: rgba(51, 255, 51, 0.1);\n}\n\n.input-container {\n  display: flex;\n  gap: 10px;\n  padding: 15px;\n  border-top: 1px solid var(--color-terminal-border);\n}\n\n.user-input {\n  flex: 1;\n  background: rgba(51, 255, 51, 0.1);\n  border: 1px solid var(--color-terminal-border);\n  color: var(--color-terminal-green);\n  padding: 8px 12px;\n  border-radius: 4px;\n  font-family: var(--font-terminal);\n}\n\n.user-input:focus {\n  outline: none;\n  border-color: var(--color-terminal-green);\n}\n\n.send-button {\n  background: transparent;\n  border: 1px solid var(--color-terminal-green);\n  color: var(--color-terminal-green);\n  padding: 8px 15px;\n  border-radius: 4px;\n  cursor: pointer;\n  font-family: var(--font-terminal);\n  transition: all 0.3s ease;\n}\n\n.send-button:hover:not(:disabled) {\n  background: rgba(51, 255, 51, 0.1);\n}\n\n.send-button:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n::-webkit-scrollbar {\n  width: 8px;\n}\n\n::-webkit-scrollbar-track {\n  background: var(--color-terminal-dark);\n}\n\n::-webkit-scrollbar-thumb {\n  background: var(--color-terminal-border);\n  border-radius: 4px;\n}\n</style>\n","import { createRouter, createWebHistory } from 'vue-router'\nimport HomeView from '../views/HomeView.vue'\nimport CommunicationsView from '../views/CommunicationsView.vue'\n\nconst router = createRouter({\n  history: createWebHistory(import.meta.env.BASE_URL),\n  routes: [\n    {\n      path: '/',\n      name: 'home',\n      component: HomeView\n    },\n    {\n      path: '/communications',\n      name: 'communications',\n      component: CommunicationsView\n    },\n    {\n      path: '/about',\n      name: 'about',\n      component: () => import('../views/AboutView.vue')\n    }\n  ]\n})\n\nexport default router\n","import './assets/main.css'\n\nimport { createApp } from 'vue'\nimport { createPinia } from 'pinia'\nimport App from './App.vue'\nimport router from './router'\n\nconst app = createApp(App)\n\napp.use(createPinia())\napp.use(router)\n\napp.mount('#app')\n"],"file":"assets/index-CtruSPQ5.js"}